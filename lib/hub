
xrc:mod docker/lib/utils

___x_cmd_docker_login(){
    param:scope    "docker/$O"
    param:dsl       '
options:
    --username              "The username of the Docker Hub account to authenticate with"                 <>
    --password              "The password or personal access token (PAT) of the Docker Hub account to authenticate with"      <>
'
    param:run
    ___x_cmd_docker_post_json "/v2/users/login" username password
}

___x_cmd_docker_token(){
    param:scope     "docker/$O"
    param:dsl       '
subcommands:
    ls          "Get access tokens "
    create      "Create a personal access token"
    update      "get user email"
    info        "List all issues"
    del         "key management"
'
    param:run
    if [ -z "$PARAM_SUBCMD" ]; then
        echo "Command Not Found. Show help." >&2
        return 0
    fi

    "___x_cmd_docker_token_${PARAM_SUBCMD}" "$@"
}

___x_cmd_docker_token_create(){
    param:scope    "docker/$O"
    param:dsl      '
type: 
    repo = "admin" "write" "read" "public_read"
options:
    --label          "Friendly name for you to identify the token"                 <>
    --repo           "permission"      <>
'
    param:run
    ___x_cmd_docker_post_json "/v2/access-tokens" username scopes="[repo=$repo]"
}

___x_cmd_docker_token_ls(){
    param:scope    "docker/$O"
    param:dsl       '
options:
    --page             "page"          <>=1
    --per_page         "per_page"      <>=10
'
    param:run
    ___x_cmd_docker_post_json "/v2/users/login" username password
}

___x_cmd_docker_login(){
    param:scope    "docker/$O"
    param:dsl       '
options:
    --username              "The username of the Docker Hub account to authenticate with"                 <>
    --password              "The password or personal access token (PAT) of the Docker Hub account to authenticate with"      <>
'
    param:run
    ___x_cmd_docker_post_json "/v2/users/login" username password
}

___x_cmd_docker_make() {
    param:void
    local O_ORIGINAL=${1:?Provide client name by O environment}

    local O="_x_cmd_x_bash____x_cmd_docker_$O_ORIGINAL"
    http "@$O" make  'https://hub.docker.com'
    http "@$O_ORIGINAL" header type "application/json;charset=utf-8"
    # O=$O_ORIGINAL ___x_cmd_docker_config_load >/dev/null
    # if [ $? -eq 0 ] && [ -n "$(O="$O_ORIGINAL" ___x_cmd_docker_token)" ]; then
    #     O="$O_ORIGINAL" ___x_cmd_docker_current_owner
    # else
    #     ___x_cmd_docker_log info "token is null"
    # fi
}
if [ -z "$DO_NOT_INIT____x_cmd_docker_DEFAULT" ]; then
    ___x_cmd_docker_make "DOCKET_DEFAULT" && DO_NOT_INIT____x_cmd_docker_DEFAULT="true"
fi
